syntax = "proto3";

package io.spoud.sdm.looker.v1alpha1;
option java_multiple_files = true;
option java_package = "io.spoud.sdm.looker.v1alpha1";
option go_package = "looker.v1alpha1";

import "looker/domain/v1alpha1/metrics.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

service MetricsService {
  rpc updateMetric (UpdateMetricRequest) returns (UpdateMetricResponse);
  rpc updateOperationalMetric (UpdateOperationalMetricRequest) returns (UpdateMetricResponse);

  rpc listMetric (ListMetricsRequest) returns (ListMetricsResponse);
}

message ResourceMetric {
  google.protobuf.Timestamp report_timestamp = 1;
  string resource_id = 2;

  enum MetricType {
    UNDEFINED = 0;

    // Message COUNTER on the producing side.
    // Tag keys:
    // - partition (default: 0)
    DATA_PORT_MESSAGES = 1;

    // Bytes COUNTER on the producing side.
    // Tag keys:
    // - partition (default: 0)
    DATA_PORT_BYTES = 2;

    // Message COUNTER on the consuming side.
    // Tag keys:
    // - partition (default: 0)
    DATA_SUBSCRIPTION_STATE_MESSAGES = 3;

    // Bytes COUNTER on the consuming side.
    // Tag keys:
    // - partition (default: 0)
    DATA_SUBSCRIPTION_STATE_BYTES = 4;

    // message lag on the consuming side
    // Tag keys:
    // - partition (default: 0)
    DATA_SUBSCRIPTION_STATE_MESSAGES_LAG = 5;

    // how well the data matches the schema
    DATA_PORT_ATTRIBUTE_QUALITY_INDEX = 6;

    // how detailed the schema is defined
    DATA_PORT_ATTRIBUTE_SPECIFICATION_INDEX = 7;

    // a combination of attribute quality and specification index
    DATA_PORT_ATTRIBUTE_INTEGRITY = 8;

    // How many item is there in this dataset
    DATA_PORT_DATASET_COUNT = 9;

    // The size in bytes of the dataset
    DATA_PORT_DATASET_SIZE_BYTES = 10;

    // Number of mutations that occur on the dataset
    DATA_PORT_MUTATIONS = 11;
  }

  double value = 3;
  MetricType type = 4;

  // Additional tags as key/value pairs for indexing purposes.
  // Tag keys are predefined per metric type. Unknown tag keys will be ignored!
  // @Deprecate since 14.06.2021 we don't use tags anymore, please sum the values on the agent side
  map<string, string> tags = 5 [deprecated = true];
}

message UpdateMetricRequest {
  io.spoud.sdm.looker.domain.v1alpha1.ResourceMetric metric = 1;
}

message UpdateOperationalMetricRequest {
  io.spoud.sdm.looker.domain.v1alpha1.AgentRef agent_ref = 2;
  repeated io.spoud.sdm.looker.domain.v1alpha1.OperationalMetric metric = 1;
}

message ListMetricsRequest {
  google.protobuf.Timestamp from = 1;
  google.protobuf.Timestamp to = 2;
  GroupingType.Type grouping = 4;
  string resource_id = 5;
  repeated ResourceMetric.MetricType type = 6;
}

message ListMetricsResponse {
  string resource_id = 1;
  repeated TimeSerie time_series = 2;
}

message TimeSerie {
  ResourceMetric.MetricType type = 5;
  repeated MetricValue metrics = 2;
}

message MetricValue {
  google.protobuf.Timestamp report_timestamp = 1;
  double double_value = 3;
}

message GroupingType {
  enum Type {
    UNKNOWN = 0;
    SUM = 1;
    AVG = 2;
    MAX_MINUS_MIN = 3;
  }
}

syntax = "proto3";
package io.spoud.sdm.logistics.service.v1;

option java_multiple_files = true;
option java_package = "io.spoud.sdm.logistics.service.v1";
option go_package = "logistics.service.v1";

import "global/selection/v1/pagination.proto";
import "logistics/selection/v1/filter.proto";
import "logistics/domain/v1/domain.proto";
import "logistics/mutation/v1/mutation.proto";
import "logistics/selection/v1/reference.proto";
import "permission/selection/v1/filter.proto";

import "google/protobuf/wrappers.proto";

service DataOfferStateService {
  rpc GetDataOfferState (GetDataOfferStateRequest) returns (GetDataOfferStateResponse);
  rpc DeleteDataOfferState (DeleteDataOfferStateRequest) returns (DeleteDataOfferStateResponse);
  rpc ListDataOfferStates (ListDataOfferStatesRequest) returns (ListDataOfferStatesResponse);

  // Saves a DataOfferState.
  //
  // The entity is identified through the `self` attribute. Different mechanisms for referencing are supported,
  // like the usual name or id refs. A more advanced approach is to use matching properties as a reference (basically a tech key).
  // If the self entity to update does not yet exist and is referenced through matching properties, it gets created automatically.
  //
  // Limitations:
  //   - properties cannot be removed yet
  //   - no support of specific field updates (without updating everything), aka field masks
  rpc Save (SaveDataOfferStateRequest) returns (SaveDataOfferStateResponse);
}

message GetDataOfferStateRequest {
  string id_or_name = 1;
  reserved 2;
}

message GetDataOfferStateResponse {
  io.spoud.sdm.logistics.domain.v1.DataOfferState data_offer_state = 1;
}

message UpdateDataOfferStateRequest {
  // the id can be defined upon creation
  string id = 6;
  string name = 1;
  map<string, string> properties = 2;
  string transport_id_or_name = 3;
  string transport_url = 5;
  bool deleted = 7;
  io.spoud.sdm.logistics.mutation.v1.AttributeChange resource_group_name_or_id = 9;
  io.spoud.sdm.logistics.mutation.v1.AttributeChange label = 10;
}

message UpdateDataOfferStateResponse {
  io.spoud.sdm.logistics.domain.v1.DataOfferState data_offer_state = 1;
}

message DeleteDataOfferStateResponse {

}

message DeleteDataOfferStateRequest {
  string id_or_name = 1;
}

message ListDataOfferStatesRequest {
  io.spoud.sdm.global.selection.v1.PageRequest page_request = 1;
  string transport_id_or_name = 2;

  // Simple predicate filter by key and value.
  // All predicates are formed as an AND, except predicates with the same key.
  // For predicates with the same key, the latest entry in the list is taken.
  // There is no support for an "OR" right now.
  repeated io.spoud.sdm.logistics.selection.v1.FilterPredicate predicates = 3;

  io.spoud.sdm.permission.selection.v1.PrivilegePredicate privilege = 4;

}

message ListDataOfferStatesResponse {
  repeated io.spoud.sdm.logistics.domain.v1.DataOfferState data_offer_states = 1;
  io.spoud.sdm.global.selection.v1.PageResult page_result = 2;
}

message SaveDataOfferStateRequest {
  DataOfferStateChange input = 10;
}

message DataOfferStateChange {
  // field mask support for updating specific fields only can be added later on

  // Selector for the entity to change.
  // If the entity does not exist, it gets created under these conditions:
  //   - properties are copied over to the properties map when using matching properties
  //   - an error is thrown if the selector is an id and not a name or matching properties
  io.spoud.sdm.logistics.selection.v1.DataOfferStateRef self = 1;

  // Entity name (can be used as id).
  // Globally unique per entity type.
  google.protobuf.StringValue name = 2;

  google.protobuf.StringValue label = 4;

  // ResourceGroup Reference
  io.spoud.sdm.logistics.selection.v1.BaseRef resource_group = 8;

  // Transport Reference
  io.spoud.sdm.logistics.selection.v1.BaseRef transport = 9;

  // Lifecycle State
  io.spoud.sdm.logistics.mutation.v1.StateChange state = 10;

  // Transport URL
  google.protobuf.StringValue transport_url = 11;

  // List of tags
  io.spoud.sdm.logistics.mutation.v1.TagList tags = 12;

  // Map of properties
  io.spoud.sdm.logistics.mutation.v1.PropertyMap properties = 13;
}

message SaveDataOfferStateResponse {
  io.spoud.sdm.logistics.domain.v1.DataOfferState data_offer_state = 1;
}
